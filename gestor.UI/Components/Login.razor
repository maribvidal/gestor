@rendermode InteractiveServer
@inject CasoDeUsoUsuarioAlta cduUsuarioAlta
@inject CasoDeUsoObtenerHash cduHash
@inject CasoDeUsoUsuarioConsultaTodos cduConsultaTodos

<div class="login-container">
    <div><h1>Inicio de sesión</h1></div>
    <div>
        <span>
            <b>Usuario: </b>
            <input placeholder="Nombre" @bind="usuario.Nombre" class="form-control">
        </span>
    </div>
    <div>
        <span>
            <b>Contraseña: </b>
            <input placeholder="Contraseña" @bind="usuario.Contraseña" type="password" class="form-control">
        </span>
    </div>
    <div>
        <span>
            <button class="btn btn-primary" @onclick="Conectar">Conectarse</button>
            <button class="btn btn-primary" @onclick="Registrar">Registrarse</button>
        </span>
    </div>
    <DialogoConfirmacion @ref=dialogo Mensaje="" />
</div>

<style>
    div.login-container {
        margin-top: 50px;
        display: flex;
        align-items: center;
        flex-direction: column;
        gap: 10px;
    }
</style>

@code {
    List<Usuario> listaUsuarios = new List<Usuario>();
    DialogoConfirmacion dialogo = null!;
    [Parameter] 
    public Usuario usuario { get; set; }
    [Parameter] 
    public EventCallback OnConectado { get; set; }

    protected override void OnParametersSet()
    {
        listaUsuarios = cduConsultaTodos.Ejecutar();
    }

    void Registrar()
    {
        if (!ExisteCuenta()) 
        {
            cduUsuarioAlta.Ejecutar(usuario);
            OnConectado.InvokeAsync();
        }
        else
        {
            dialogo.Mensaje = "Esa cuenta ya se encuentra registrada";
            dialogo.Mostrar();
        }
    }

    void Conectar()
    {
        if (ExisteCuenta()) 
        {
            Usuario consultaUsuario = listaUsuarios.Where(u => u.Nombre == usuario.Nombre).Single();
            if (consultaUsuario.Contraseña == cduHash.Obtener(usuario.Contraseña))
            {
                OnConectado.InvokeAsync();
            }
            else
            {
                dialogo.Mensaje = "La contraseña es incorrecta";
                dialogo.Mostrar();
            }
        }
    }

    bool ExisteCuenta()
    {
        try
        {
            var consultaUsuario = listaUsuarios.Where(u => u.Nombre == usuario.Nombre).SingleOrDefault();
            if (consultaUsuario != null)
                return true;
        }
        catch (Exception ex)
        {
            Console.WriteLine("ERROR: " + ex.Message);
        }
        dialogo.Mensaje = "Esa cuenta no se encuentra registrada";
        dialogo.Mostrar();
        return false;
    }
}